// Generated by view binder compiler. Do not edit!
package com.naveenkumawat.transactions.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.naveenkumawat.transactions.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBalanceContainerBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ColumnBalanceContainerDataBinding clBalance;

  @NonNull
  public final ColumnBalanceContainerDataBinding clExpenses;

  @NonNull
  public final ColumnBalanceContainerDataBinding clIncome;

  @NonNull
  public final LinearProgressIndicator lpiBalanceIndicator;

  @NonNull
  public final VerticalDividerBinding verticalDivider1;

  @NonNull
  public final VerticalDividerBinding verticalDivider2;

  private LayoutBalanceContainerBinding(@NonNull CardView rootView,
      @NonNull ColumnBalanceContainerDataBinding clBalance,
      @NonNull ColumnBalanceContainerDataBinding clExpenses,
      @NonNull ColumnBalanceContainerDataBinding clIncome,
      @NonNull LinearProgressIndicator lpiBalanceIndicator,
      @NonNull VerticalDividerBinding verticalDivider1,
      @NonNull VerticalDividerBinding verticalDivider2) {
    this.rootView = rootView;
    this.clBalance = clBalance;
    this.clExpenses = clExpenses;
    this.clIncome = clIncome;
    this.lpiBalanceIndicator = lpiBalanceIndicator;
    this.verticalDivider1 = verticalDivider1;
    this.verticalDivider2 = verticalDivider2;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBalanceContainerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBalanceContainerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_balance_container, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBalanceContainerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cl_balance;
      View clBalance = ViewBindings.findChildViewById(rootView, id);
      if (clBalance == null) {
        break missingId;
      }
      ColumnBalanceContainerDataBinding binding_clBalance = ColumnBalanceContainerDataBinding.bind(clBalance);

      id = R.id.cl_expenses;
      View clExpenses = ViewBindings.findChildViewById(rootView, id);
      if (clExpenses == null) {
        break missingId;
      }
      ColumnBalanceContainerDataBinding binding_clExpenses = ColumnBalanceContainerDataBinding.bind(clExpenses);

      id = R.id.cl_income;
      View clIncome = ViewBindings.findChildViewById(rootView, id);
      if (clIncome == null) {
        break missingId;
      }
      ColumnBalanceContainerDataBinding binding_clIncome = ColumnBalanceContainerDataBinding.bind(clIncome);

      id = R.id.lpi_balance_indicator;
      LinearProgressIndicator lpiBalanceIndicator = ViewBindings.findChildViewById(rootView, id);
      if (lpiBalanceIndicator == null) {
        break missingId;
      }

      id = R.id.vertical_divider_1;
      View verticalDivider1 = ViewBindings.findChildViewById(rootView, id);
      if (verticalDivider1 == null) {
        break missingId;
      }
      VerticalDividerBinding binding_verticalDivider1 = VerticalDividerBinding.bind(verticalDivider1);

      id = R.id.vertical_divider_2;
      View verticalDivider2 = ViewBindings.findChildViewById(rootView, id);
      if (verticalDivider2 == null) {
        break missingId;
      }
      VerticalDividerBinding binding_verticalDivider2 = VerticalDividerBinding.bind(verticalDivider2);

      return new LayoutBalanceContainerBinding((CardView) rootView, binding_clBalance,
          binding_clExpenses, binding_clIncome, lpiBalanceIndicator, binding_verticalDivider1,
          binding_verticalDivider2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
