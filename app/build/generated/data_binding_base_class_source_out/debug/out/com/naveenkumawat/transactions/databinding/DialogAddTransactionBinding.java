// Generated by view binder compiler. Do not edit!
package com.naveenkumawat.transactions.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.naveenkumawat.transactions.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddTransactionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final LayoutDollarComponentBinding clDollarContainer;

  @NonNull
  public final EditText etTransactionDescription;

  @NonNull
  public final Spinner spTransactionType;

  @NonNull
  public final TextView tvDialogTitle;

  private DialogAddTransactionBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAdd,
      @NonNull Button btnCancel, @NonNull LayoutDollarComponentBinding clDollarContainer,
      @NonNull EditText etTransactionDescription, @NonNull Spinner spTransactionType,
      @NonNull TextView tvDialogTitle) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnCancel = btnCancel;
    this.clDollarContainer = clDollarContainer;
    this.etTransactionDescription = etTransactionDescription;
    this.spTransactionType = spTransactionType;
    this.tvDialogTitle = tvDialogTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btn_cancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.cl_dollar_container;
      View clDollarContainer = ViewBindings.findChildViewById(rootView, id);
      if (clDollarContainer == null) {
        break missingId;
      }
      LayoutDollarComponentBinding binding_clDollarContainer = LayoutDollarComponentBinding.bind(clDollarContainer);

      id = R.id.et_transaction_description;
      EditText etTransactionDescription = ViewBindings.findChildViewById(rootView, id);
      if (etTransactionDescription == null) {
        break missingId;
      }

      id = R.id.sp_transaction_type;
      Spinner spTransactionType = ViewBindings.findChildViewById(rootView, id);
      if (spTransactionType == null) {
        break missingId;
      }

      id = R.id.tv_dialog_title;
      TextView tvDialogTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvDialogTitle == null) {
        break missingId;
      }

      return new DialogAddTransactionBinding((ConstraintLayout) rootView, btnAdd, btnCancel,
          binding_clDollarContainer, etTransactionDescription, spTransactionType, tvDialogTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
